PROTOCOL v/s SUBCLASS

PROTOCOL							                				

 1. Declare the methods expected to be used for a particular situation.	   	   																   								
 2. Syntax:												   						
		@protocol ProtocolName							
		// list of methods and properties			
		@end													   							
	
 3. Protocols can have optional methods					
	  i.e: all methods need not be used in class implementation.												   		
		
 4. Protocols are also useful in situations where the class of an object isn’t known, or needs to stay hidden.(Anonymity)													

SUBCLASS

1. A subclass inherits methods and instance variables from its superclass.
2. Syntax:
	@interface subclassname : classname {	
	   // instance variables				
	}			   							
	//methods		   						
	@end		
3. All the declared methods should be used in subclass.
4. Class of an object cannot be hidden.	